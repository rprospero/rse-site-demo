#+TITLE: Site Demo
#+AUTHOR: Adam Washington
#+DATE: 2024-05-22
#+OPTIONS:  toc:1 H:2
#+REVEAL_ROOT: https://cdn.jsdelivr.net/npm/reveal.js

* Basics

** Prototype

- Possible changes to the Scientific Software Pages
- Just a prototype
  - Just discussing desired content
  - Intentionally unprofessional font and minimal styling
- Only high level content discussion
  - What to say, not how to say it

** Open Questions

- What other info should be included on the project pages?

- Is there a better way to organise the projects than by technique?

- Is the recent news useful?

* Layout

** Site

[[https://rprospero.github.io/rse-site-demo/compact.html][Link]]

** Open Questions

- Is there a better way to handle the grouping?
  - Some instruments have nothing beyond Mantid
  - Some instruments have multiple techniques
- Would we even need the project pages?
- Do we need more/less columns?
  - Do the logos add anything?
  - Do we need to link to the source?

* Maintenance

** Maintenance Script

*** Goals

- Allow site maintainer to keep site up to date
- Not require extra work from project teams
- Only require a few minutes a month (amortised)

** Partial Implementation

- Every package has a test in the python =unittest= package
- Run the test each month
  - if every test passes, there's nothing to do
- If a test fails, there's probably been an update to a package
  - Update the test to pass again
  - If there's been an update to the package, also update the site
- Intentionally brittle

** Example Script

#+BEGIN_SRC python
def test_dissolve(self):
    version = "1.5.1"

    r = requests.get("https://projectdissolve.com/packages/")
    self.assertEqual(r.status_code, 200)
    soup = BeautifulSoup(r.text, features="html.parser")
    actual = soup.select_one('a[href="#release"]').get_text()
    self.assertEqual(version, actual)

#+END_SRC

** Official Implementation

[[https://isisneutronmuon.github.io/]]

Fully automated via GitHub action

** Comparison

| Mine                                   | Official                       |
|----------------------------------------+--------------------------------|
| Human needed for updates               | Human needed when it breaks    |
| Link to official project download page | Always use GitHub release page |
| Checks for dead site links             | Doesn't bother with site links |

Ultimately, the page needs to be on the ISIS SharePoint site, which
limits the options for full automation.

** Open Question

Which approach do we prefer?
